<?php
namespace Sam\Server\Controllers;

use Sam\Server\Models\Customer;
use Sam\Server\Models\Depot;
use Sam\Server\Models\OwnedStock;
use Sam\Server\Models\User;
use Sam\Server\Plugins\AuthenticationPlugin;

/**
 * Created by PhpStorm.
 * User: www-data
 * Date: 18.03.17
 * Time: 13:59
 */
class DepotController extends ControllerBase
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }


    public function getAction($loginName, $id) {
        $config = $this->di->get("config");

        $auth = $this->session->get("auth");
        /**
         * @var $depot Depot
         */
        $depot = Depot::findFirst(array("id = :id:", "bind" => array("id" => $id)));
        if(empty($depot)) {
            return json_encode(array("error" => "Request error", "code" => "42"));
        }

        $ownedStocks = OwnedStock::find(array("depotId = :id:", "bind" => array("id" => $depot->getId())));

        /**
         * @var $customer Customer
         */
        $customer = $depot->getCustomer();
        if(empty($customer)) {
            return json_encode(array("error" => "Request error", "code" => "43"));
        }
        /**
         * @var $user User
         */
        $user = $customer->getUser();
        if(empty($user)) {
            return json_encode(array("error" => "Request error", "code" => "44"));
        }
        if($user->getLoginNr() !== $loginName) {
            return json_encode(array("error" => "Request error", "code" => "41"));
        }

        if(AuthenticationPlugin::isAllowedUser($user, $auth, $user->getLoginNr(), $config)) {
            return json_encode(array("depot" => $depot, "customer" => $customer, "user" => $user, "ownedStocks" => $ownedStocks));
        } else {
            return json_encode(array("error" => "not authorised", "code" => "40"));
        }
    }

    public function postAction() {
        /**
         * gets the configuration object
         */
        $config = $this->getDI()->get('config');
        /*
         * gets the authenticated user
         */
        $auth = $this->session->get("auth");

        $loginName = $this->request->getPost("loginName");

        /** @var User $user */
        $user = User::findFirst(array("loginNr = :ln:", "bind" => array("ln" => $loginName)));
        $budget = $this->request->getPost("budget");

        if(AuthenticationPlugin::isAllowedUser($user, $auth, $loginName, $config) === true) {
            if(!isset($budget) || empty($budget) || !is_numeric($budget)) {
                return json_encode(array("error" => "request invalid", "code" => "90", "budget" => $budget));
            }
            /** @var Customer $customer */
            $customer = Customer::findFirst(array("userId = :id:", "bind" => array("id" => $user->getId())));

            if($customer->changeBudget(-1 * $budget) === false) {
                return json_encode(array("error" => "request invalid", "code" => "93"));
            }

            $depot = new Depot();
            $depot->setCustomerId($customer->getId());
            $depot->setBudget($budget);
            if($depot->save() === false) {
                return json_encode(array("error" => "request invalid", "code" => "91"));
            }
            return json_encode(array("depot" => $depot));
        }
        return json_encode(array("error" => "request invalid", "code" => "92"));
    }

}