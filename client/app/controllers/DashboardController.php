<?php
/**
 * Created by PhpStorm.
 * User: www-data
 * Date: 29.03.17
 * Time: 12:26
 */

namespace Sam\Client\Controllers;


use Sam\Client\Models\OwnedStock;
use Sam\Client\Models\User;
use Sam\Client\Plugins\RestPlugin;

class DashboardController extends ControllerBase
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function indexAction() {

        $config = $this->di->get("config");
        /** @var User $auth */
        $auth = $this->session->get("auth");
        if($auth->getRole() === $config->roles->customers) {
            $this->response->redirect('dashboard/customer/' . $auth->getLoginName());
        }

        $this->view->user = $this->session->get("auth");


    }

    public function customerAction($loginName = false) {
        $config = $this->di->get("config");
        /**
         * @var $user User
         */
        $user = $this->session->get("auth");
        /**
         * @var $server RestPlugin
         */
        $server = $this->getDI()->get("server");

        if($this->request->isGet()) {
            $search = $this->request->get("search");
            $depot = $this->request->get("depot");
            $stock = $this->request->get("stock");
            $new = $this->request->get("new");
            $budget = $this->request->get("budget");

            if($loginName === false) {
                /*
                 * only employees may access the list view
                 */
                if($user->getRole() === $config->roles->employees) {
                    /*
                     *  Shows all Customers
                     */
                    $this->view->pick("dashboard/listCustomers");
                    $customers = $server->getCustomers();
                    $this->view->customers = $customers;
                } else {
                    $this->dispatcher->forward(array(
                        "controller"=>"error",
                        "action" => "show401"
                    ));
                }

            } else if($loginName !== false && !isset($search) && !isset($depot) && !isset($budget)) {
                /*
                 * shows a single customer
                 */
                $this->view->pick("dashboard/showCustomer");
                $customer = $server->getCustomer($loginName);
                $this->view->customer = $customer;
                $this->view->auth = $this->session->get("auth");
            } else if($loginName !== false && isset($search)) {
                /*
                 * searches for customers and views the list
                 */
                if($user->getRole() === $config->roles->employees) {
                    $this->view->pick("dashboard/listCustomers");
                    $customers = $server->findCustomers($search);
                    $this->view->customers = $customers;
                } else {
                    $this->dispatcher->forward(array(
                        "controller"=>"error",
                        "action" => "show401"
                    ));
                }
            } else if($loginName !== false && isset($depot) && empty($depot) && isset($new) && empty($new)) {
                /*
                 * loads the page to add a depot
                 */
                $this->view->pick("dashboard/addDepot");
                $customer = $server->getCustomer($loginName);
                $this->view->newDepot = true;
                $this->view->customer = $customer;
            } else if($loginName !== false && isset($depot) && !isset($stock)) {
                /*
                 * loads the selected depot
                 */
                $this->view->pick("dashboard/showDepot");
                $depot = $server->getDepot($depot, $loginName);
                $ownedStocks = array();
                /** @var OwnedStock $ownedStock */
                if(!empty($depot)) {
                    $res = $depot->getOwnedStocks(false, true);
                    /** @var OwnedStock $stock */
                    foreach ($res as $stock) {
                        $stocksBySymbol = $depot->getOwnedStocks($stock->getStockSymbol());
                        $ret = new OwnedStock(-1, $stock->getStockSymbol(), 0, 0, $depot);
                        foreach ($stocksBySymbol as $ownedStock) {
                            $ret->setPricePerShare($ret->getPricePerShare() + $ownedStock->getPricePerShare());
                            $ret->setShares($ret->getShares() + $ownedStock->getShares());
                        }
                        $ret->setPricePerShare($ret->getPricePerShare() / count($stocksBySymbol));
                        $ownedStocks[] = $ret;
                    }
                }


                $this->view->stocks = $ownedStocks;
                $this->view->depot = $depot;
            } else if($loginName !== false && isset($depot) && isset($stock) && empty($stock) ) {
                /*
                 * loads the search page for stocks
                 */
                $this->view->pick("dashboard/searchStocks");
                $depot = $server->getDepot($depot, $loginName);
                $this->view->depot = $depot;
                $this->view->searchStocks = true;
            } else if($loginName !== false && isset($depot) && isset($stock) && !empty($stock) ) {
                /*
                 * loads the search page for stocks with results
                 */
                $this->view->pick("dashboard/searchStocks");
                $depot = $server->getDepot($depot, $loginName);
                $this->view->depot = $depot;
                $this->view->searchStocks = true;

                $stocks = $server->getStocks($stock);
                $this->view->stocks = $stocks;
            } else if($loginName !== false && isset($budget)) {
                /*
                 * loads the view to change the budget
                 */
                $this->view->pick("dashboard/changeBudget");
                $customer = $server->getCustomer($loginName);
                $this->view->customer = $customer;
            }
        } else if($this->request->isPost()) {

            $newDepot = $this->request->getPost("newDepot");
            $changeBudget = $this->request->getPost("changeBudget");

            /*
             * if the param $newDepot is not set (empty) and changeBudget is not set (empty)
             * then either sell or buy is the action
             */
            if(empty($newDepot) && empty($changeBudget)) {
                /*
                 * gets all paramaters needed for a transaction
                 */
                $depot = $this->request->getPost("depot", null, null, true);
                $direction = $this->request->getPost("direction", null, null, true);
                $shares = $this->request->getPost("shares", null, null, true);
                $symbol = $this->request->getPost("symbol", null, null, true);
                $ownedStockId = $this->request->getPost("ownedStockId");

                $transaction = false;
                $this->view->pick("dashboard/searchStocks");
                if($direction === "buy") {

                    $transaction = $server->buyStock($shares, $symbol, $depot);
                    $depot = $server->getDepot($depot, $loginName);
                    $this->view->depot = $depot;
                    $this->view->searchStocks = true;

                    $stocks = $server->getStocks($symbol);
                    $this->view->stocks = $stocks;
                } else if($direction === "sell") {
                    if(empty($ownedStockId)) {
                       $ownedStockId = false;
                    }
                    $transaction = $server->sellStock($shares, $symbol, $depot, $ownedStockId);
                    $depot = $server->getDepot($depot, $loginName);
                    $this->view->depot = $depot;
                    $this->view->searchStocks = true;

                    $stocks = $server->getStocks($symbol);
                    $this->view->stocks = $stocks;
                }

                $this->view->transaction = $transaction;
            } else if(empty($changeBudget)){
                $budget = $this->request->getPost("budget");
                $depot = $server->addDepot($loginName, $budget);
                if(!empty($depot)) {
                    $this->view->pick("dashboard/showDepot");
                    $this->view->depot = $depot;
                } else {
                    $this->view->pick("dashboard/addDepot");
                    $customer = $server->getCustomer($loginName);
                    $this->view->newDepot = true;
                    $this->view->customer = $customer;
                }
            } else if(!empty($changeBudget)) {
                $cash = $this->request->getPost("cash");
                $success = $server->changeBudget($loginName, $cash);

                if($success === true) {
                    $this->view->pick("dashboard/showCustomer");
                    $customer = $server->getCustomer($loginName);
                    $this->view->customer = $customer;
                } else {

                    $this->view->pick("dashboard/changeBudget");
                    $customer = $server->getCustomer($loginName);
                    $this->view->customer = $customer;
                }
            }
        }
    }

    public function bankAction() {
        /**
         * @var $user User
         */
        $user = $this->session->get("auth");
        /**
         * @var $server RestPlugin
         */
        $server = $this->getDI()->get("server");
        $bank = $server->getBank();
        $this->view->bank = $bank;
    }


    public function addCustomerAction() {
        if($this->request->isGet()) {

        } else if($this->request->isPost()) {
            $loginName = $this->request->getPost("loginName");
            $password = $this->request->getPost("password");
            $firstname = $this->request->getPost("firstname");
            $lastname = $this->request->getPost("lastname");
            $address = $this->request->getPost("address");
            $phone = $this->request->getPost("phone");

            if(!empty($loginName) && !empty($password) && !empty($firstname) && !empty($lastname) && !empty($address)) {
                /** @var RestPlugin $server */
                $server = $this->di->get("server");
                $res = $server->addCustomer($loginName, $password, $firstname, $lastname, $phone, $address);
                if(isset($res->success)) {
                    $this->dispatcher->forward(array(
                        "controller" => "dashboard",
                        "action" => "index"
                    ));
                    return;
                }
            }
        }
    }
}